# coding: utf-8
# Problem 27 「二次式素数」

# 簡単な方針
# f(n) = n^2 + a*n + b において、
#
# n=0 とすると、f(0) = b より、題意からbは素数でないといけない(1)
#
# n=1とすると、f(1)=1+a+b
# (1)より、bは素数であることからbは奇数。1+a+bが素数となるためには奇数でないとならないため、
# 1が奇数、bも奇数、ということはaも奇数とならざるをえない。(2)
# ※これはn=-1でも同様。
#
# 続いて、n=bのときを考えると、f(b) = b^2 + a*b + b = b*(b+a+1)となり、必ず素数でなくなる。
# これはbが正でも負でも変わらないため、f(n)が連続する素数を生成すると仮定した場合、必ずn < |b|が成立する。(3)
#
# 以上から、奇数aと素数bの組み合わせの中に求める二次式の(a,b)の組があり、bの値が大きいほど組み合わせの数が大きくなるチャンスがある。
#
# さて、n=k(k<|b|)のときについても考えてみる。
# n=kのときにf(k) = k^2+a*k+bが素数であると仮定し、n=k+1のときを考えると、
# 
# f(k+1) = (k+1)^2 + a*(k+1) + b = k^2 + 2k + 1 +a*k + a + b
# f(k+1) = (k^2 + a*k + b) + (a + 2k + 1)
# f(k+1) = f(k) + (a + 2k + 1) = f(k) + (a + b + 1 )+ (2k - b)
# ※f(1) = (a + b + 1)なので、数学的帰納法的にここでは素数となる。
# f(k+1) = f(k) + f(1) + (2k-b)
# f(k)とf(1)は素数、(2k-b)は確実に奇数なのでf(k+1)が素数となるには
#


# n^2 + a*n + b = (n + p)(n + q)

require 'prime'
def euler027
	p Prime.prime_division(41)
end